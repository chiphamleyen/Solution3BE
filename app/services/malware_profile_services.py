import logging

_logger = logging.getLogger(__name__)

malware_profile_data = [
    {
        "id": "1",
        "name": "Red Line Stealer",
        "description": "Description of Malware 1",
        "prevention_techniques": "Techniques to prevent Malware 1",
    },
    {
        "id": "2",
        "name": "Downloader",
        "description": "Description of Malware 2",
        "prevention_techniques": "Techniques to prevent Malware 2",
    },
    {
        "id": "3",
        "name": "RAT",
        "description": "Description of Malware 3",
        "prevention_techniques": "Techniques to prevent Malware 3",
    },
    {
        "id": "4",
        "name": "Banking Trojan",
        "description": "Description of Malware 4",
        "prevention_techniques": "Techniques to prevent Malware 4",
    },
    {
        "id": "5",
        "name": "Snake Key Logger",
        "description": "Description of Malware 5",
        "prevention_techniques": "Techniques to prevent Malware 5",
    },
    {
        "id": "6",
        "name": "Spyware",
        "description": "Description of Malware 6",
        "prevention_techniques": "Techniques to prevent Malware 6",
    }
]

class MalwareProfileService:
    @staticmethod
    async def get_malware_profile_list() -> tuple[list[dict], int]:
        count = len(malware_profile_data)
        return malware_profile_data, count
    
    @staticmethod
    async def get_malware_profile_by_id(id: str) -> dict:
        for malware_profile in malware_profile_data:
            if malware_profile["id"] == id:
                return malware_profile
        return None